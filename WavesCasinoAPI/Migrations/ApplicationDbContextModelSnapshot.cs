// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WavesCasinoAPI.Data;

#nullable disable

namespace WavesCasinoAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WavesCasinoAPI.Areas.CaribbeanStudPoker.Models.CaribbeanStudPokerGame", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("Caller")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedOnChainOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DAppAddress")
                        .HasColumnType("text");

                    b.Property<string>("DealerCardRevealTxId")
                        .HasColumnType("text");

                    b.Property<string>("DealerSortedCards")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastModifiedOnChainOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<long>("Payout")
                        .HasColumnType("bigint");

                    b.Property<string>("PayoutTxId")
                        .HasColumnType("text");

                    b.Property<string>("PlayerCardRevealTxId")
                        .HasColumnType("text");

                    b.Property<string>("PlayerSortedCards")
                        .HasColumnType("text");

                    b.Property<string>("PlayerStartGameTxId")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("TxId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CaribbeanStudPokerGames");
                });

            modelBuilder.Entity("WavesCasinoAPI.Areas.Roulette.Models.RouletteBet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("Bet")
                        .HasColumnType("text");

                    b.Property<string>("Caller")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedOnChainOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GameId")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastModifiedOnChainOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentId")
                        .HasColumnType("text");

                    b.Property<long>("Payout")
                        .HasColumnType("bigint");

                    b.Property<string>("TxId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("RouletteBets");
                });

            modelBuilder.Entity("WavesCasinoAPI.Areas.Roulette.Models.RouletteGame", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedOnChainOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DAppAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastModifiedOnChainOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<string>("Result")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RouletteGames");
                });

            modelBuilder.Entity("WavesCasinoAPI.Areas.State.Models.GameState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastLoaded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("LastSyncedHeight")
                        .HasColumnType("bigint");

                    b.Property<string>("LastSyncedTx")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GameStates");
                });

            modelBuilder.Entity("WavesCasinoAPI.Areas.Roulette.Models.RouletteBet", b =>
                {
                    b.HasOne("WavesCasinoAPI.Areas.Roulette.Models.RouletteGame", "Game")
                        .WithMany("Bets")
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("WavesCasinoAPI.Areas.Roulette.Models.RouletteGame", b =>
                {
                    b.Navigation("Bets");
                });
#pragma warning restore 612, 618
        }
    }
}
